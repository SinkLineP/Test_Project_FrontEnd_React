[{"/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/index.js":"1","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/reportWebVitals.js":"2","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/App.js":"3","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/Table/TableData.js":"4","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/TemplateButton/TemplateButton.js":"5","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/Pagination/Pagination.js":"6","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/FilterData/FilterData.js":"7","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/Search/Search.js":"8"},{"size":1983,"mtime":1651860015409,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1651743309779,"results":"11","hashOfConfig":"10"},{"size":775,"mtime":1651855283438,"results":"12","hashOfConfig":"10"},{"size":3277,"mtime":1651863760858,"results":"13","hashOfConfig":"10"},{"size":266,"mtime":1651860097366,"results":"14","hashOfConfig":"10"},{"size":1206,"mtime":1651863760794,"results":"15","hashOfConfig":"10"},{"size":3121,"mtime":1651865253979,"results":"16","hashOfConfig":"10"},{"size":942,"mtime":1651861428280,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1d9mu3r",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/index.js",[],[],[],"/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/reportWebVitals.js",[],[],[],"/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/App.js",["46"],[],"import React, { Component } from 'react';\nimport './App.css';\nimport TableData from './components/Table/TableData';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Search from \"./components/Search/Search\";\n\nclass App extends Component {\n\n  async componentWillMount() {\n    const responseData = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n\n    responseData.data.map((item) => {\n      this.props.onAddRedux(item);\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search />\n        <TableData/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    posts: state.posts,\n  }),\n  dispatch => ({\n    onAddRedux: (item) => {\n      dispatch({ type: 'ADD_TO_REDUX', data: item })\n    },\n  })\n)(App);\n","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/Table/TableData.js",[],[],"/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/TemplateButton/TemplateButton.js",[],[],"/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/Pagination/Pagination.js",[],[],"/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/FilterData/FilterData.js",["47","48","49","50","51","52"],[],"import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./FilterData.css\";\nimport arrowDown from \"./Image/arrow-white-btn.svg\"\n\nclass FilterData extends Component {\n  render() {\n    const allPosts = this.props.posts;\n    const isSortedTitle = this.props.isSortedTitle.index;\n    const isSortedDesc = this.props.isSortedDesc.index;\n    const isSortedId = this.props.isSortedId.index;\n\n    const sortId = () => {\n      let idPosts;\n\n      if (isSortedId === false) {\n        idPosts = allPosts.sort((a, b) => (a.id > b.id) ? 1 : -1);\n        this.props.onUpdateSortId(true);\n      } else {\n        idPosts = allPosts.sort((a, b) => (a.id < b.id) ? 1 : -1);\n        this.props.onUpdateSortId(false);\n      }\n\n      this.props.onDeletePosts();\n\n      idPosts.map(item => {\n        this.props.onUpdateAllPosts(item);\n      })\n    }\n\n    const sortTitle = () => {\n      let title;\n\n      if (isSortedTitle === false) {\n        title = allPosts.sort((a, b) => (a.title > b.title) ? 1 : -1);\n        this.props.onUpdateSortTitle(true);\n      } else {\n        title = allPosts.sort((a, b) => (a.title < b.title) ? 1 : -1);\n        this.props.onUpdateSortTitle(false);\n      }\n\n      this.props.onDeletePosts();\n\n      title.map(item => {\n        this.props.onUpdateAllPosts(item);\n      })\n    }\n\n    const sortDesc = () => {\n      let desc;\n\n      if (isSortedDesc === false) {\n        desc = allPosts.sort((a, b) => (a.body > b.body) ? 1 : -1);\n        this.props.onUpdateSortDesc(true);\n      } else {\n        desc = allPosts.sort((a, b) => (a.body < b.body) ? 1 : -1);\n        this.props.onUpdateSortDesc(false);\n      }\n\n      this.props.onDeletePosts();\n\n      desc.map(item => {\n        this.props.onUpdateAllPosts(item);\n      })\n    }\n\n\n\n    return(\n      <>\n        <th><button id={\"id\"} className={\"custom-thead-btn\"} onClick={sortId}>ID <img src={arrowDown} className={\"arrow-dropdown\"} /></button></th>\n        <th><button id={\"title\"} className={\"custom-thead-btn\"} onClick={sortTitle}>Заголовок <img src={arrowDown} className={\"arrow-dropdown\"} /></button></th>\n        <th><button id={\"desc\"} className={\"custom-thead-btn\"} onClick={sortDesc}>Описание <img src={arrowDown} className={\"arrow-dropdown\"} /></button></th>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    posts: state.posts,\n    currentPageTable: state.currentPageTable,\n    isSortedTitle: state.isSortedTitle,\n    isSortedDesc: state.isSortedDesc,\n    isSortedId: state.isSortedId,\n  }),\n  dispatch => ({\n    onAddCurrentPageTable: (item) => {\n      dispatch({type: 'SAVE_CURRENT_PAGE', data: item})\n    },\n    onUpdateAllPosts: (item) => {\n      dispatch({type: 'UPDATE_ALL_POSTS', data: item})\n    },\n    onDeletePosts: () => {\n      dispatch({type: 'DELETE_ALL_POSTS'})\n    },\n    onUpdateSortTitle: (item) => {\n      dispatch({type: 'UPDATE_SORT_TITLE', data: item})\n    },\n    onUpdateSortDesc: (item) => {\n      dispatch({type: 'UPDATE_SORT_DESC', data: item})\n    },\n    onUpdateSortId: (item) => {\n      dispatch({type: 'UPDATE_SORT_ID', data: item})\n    }\n  })\n)(FilterData);\n","/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/Search/Search.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":13,"column":34,"nodeType":"55","messageId":"56","endLine":13,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":26,"column":24,"nodeType":"55","messageId":"56","endLine":26,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":44,"column":22,"nodeType":"55","messageId":"56","endLine":44,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":62,"column":21,"nodeType":"55","messageId":"56","endLine":62,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":71,"column":82,"nodeType":"59","endLine":71,"endColumn":134},{"ruleId":"57","severity":1,"message":"58","line":72,"column":95,"nodeType":"59","endLine":72,"endColumn":147},{"ruleId":"57","severity":1,"message":"58","line":73,"column":92,"nodeType":"59","endLine":73,"endColumn":144},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]