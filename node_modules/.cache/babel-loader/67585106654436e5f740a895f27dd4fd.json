{"ast":null,"code":"import React from \"react\";\n\nconst SortTemplate = props => {\n  let {\n    type,\n    allPosts,\n    isSorted,\n    names\n  } = props;\n\n  switch (type) {\n    case 'id':\n      if (isSorted === false) {\n        names = allPosts.sort((a, b) => a.id > b.id ? 1 : -1);\n        this.props.onUpdateSortId(true);\n      } else {\n        names = allPosts.sort((a, b) => a.id < b.id ? 1 : -1);\n        this.props.onUpdateSortId(false);\n      }\n\n    case 'title':\n    case 'desc':\n  }\n};\n\n_c = SortTemplate;\nexport default SortTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortTemplate\");","map":{"version":3,"names":["React","SortTemplate","props","type","allPosts","isSorted","names","sort","a","b","id","onUpdateSortId"],"sources":["/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/FilterData/SortTemplate/SortTemplate.js"],"sourcesContent":["import React from \"react\";\n\n\nconst SortTemplate = (props) => {\n  let { type, allPosts, isSorted, names } = props;\n\n  switch (type) {\n    case 'id':\n      if (isSorted === false) {\n        names = allPosts.sort((a, b) => (a.id > b.id) ? 1 : -1);\n        this.props.onUpdateSortId(true);\n      } else {\n        names = allPosts.sort((a, b) => (a.id < b.id) ? 1 : -1);\n        this.props.onUpdateSortId(false);\n      }\n    case 'title':\n    case 'desc':\n  }\n\n\n\n}\n\nexport default SortTemplate;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B,IAAI;IAAEC,IAAF;IAAQC,QAAR;IAAkBC,QAAlB;IAA4BC;EAA5B,IAAsCJ,KAA1C;;EAEA,QAAQC,IAAR;IACE,KAAK,IAAL;MACE,IAAIE,QAAQ,KAAK,KAAjB,EAAwB;QACtBC,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAV,GAAgB,CAAhB,GAAoB,CAAC,CAA7C,CAAR;QACA,KAAKR,KAAL,CAAWS,cAAX,CAA0B,IAA1B;MACD,CAHD,MAGO;QACLL,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAV,GAAgB,CAAhB,GAAoB,CAAC,CAA7C,CAAR;QACA,KAAKR,KAAL,CAAWS,cAAX,CAA0B,KAA1B;MACD;;IACH,KAAK,OAAL;IACA,KAAK,MAAL;EAVF;AAeD,CAlBD;;KAAMV,Y;AAoBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}