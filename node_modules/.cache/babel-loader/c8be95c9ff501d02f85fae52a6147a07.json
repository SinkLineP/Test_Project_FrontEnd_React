{"ast":null,"code":"var _jsxFileName = \"/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/Table/TableData.js\";\nimport React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./TableData.css\";\nimport { connect } from \"react-redux\";\nimport Pagination from \"../Pagination/Pagination\";\nimport FilterData from \"../FilterData/FilterData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TableData extends Component {\n  render() {\n    const postPerPage = 10;\n    const currentPage = this.props.currentPageTable.index;\n    const lastPostIndex = currentPage * postPerPage;\n    const firstPostIndex = lastPostIndex - postPerPage;\n    const currentPosts = this.props.posts.slice(firstPostIndex, lastPostIndex);\n    const valueSearch = this.props.Search.value;\n    const allPosts = this.props.posts;\n\n    const paginate = pageNumbers => {\n      this.props.onAddCurrentPageTable(pageNumbers);\n    };\n\n    const nextPage = () => {\n      const addCurrentPage = currentPage + 1 > localStorage.getItem(\"countPages\") ? 1 : currentPage + 1;\n      this.props.onAddCurrentPageTable(addCurrentPage);\n      console.log(addCurrentPage);\n      localStorage.setItem(\"currentPage\", addCurrentPage);\n    };\n\n    const prevPage = () => {\n      this.props.onAddCurrentPageTable(currentPage - 1 < 1 ? localStorage.getItem(\"countPages\") : currentPage - 1);\n    };\n\n    const filteredPosts = allPosts.filter(post => Object.keys(post).some(key => String(post[key]).toLowerCase().includes(valueSearch.toLowerCase())));\n    const currentFilterPosts = filteredPosts.slice(firstPostIndex, lastPostIndex);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"tbl-border\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tbl-header\",\n            children: /*#__PURE__*/_jsxDEV(FilterData, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: valueSearch !== \"\" ? currentFilterPosts.map(item => {\n            const {\n              id,\n              title,\n              body\n            } = item;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"full-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"id-format\",\n                  children: id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"title-format\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"content-format\",\n                  children: body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          }) : currentPosts.map(item => {\n            const {\n              id,\n              title,\n              body\n            } = item;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"full-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"id-format\",\n                  children: id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"title-format\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"content-format\",\n                  children: body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        postPerPage: postPerPage,\n        totalPosts: valueSearch === \"\" ? this.props.posts.length : filteredPosts.length,\n        paginate: paginate,\n        prevPage: prevPage,\n        nextPage: nextPage,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default connect(state => ({\n  posts: state.posts,\n  currentPageTable: state.currentPageTable,\n  Search: state.Search\n}), dispatch => ({\n  onAddRedux: item => {\n    dispatch({\n      type: 'ADD_TO_REDUX',\n      data: item\n    });\n  },\n  onAddCurrentPageTable: item => {\n    dispatch({\n      type: 'SAVE_CURRENT_PAGE',\n      data: item\n    });\n  }\n}))(TableData);","map":{"version":3,"names":["React","Component","Table","connect","Pagination","FilterData","TableData","render","postPerPage","currentPage","props","currentPageTable","index","lastPostIndex","firstPostIndex","currentPosts","posts","slice","valueSearch","Search","value","allPosts","paginate","pageNumbers","onAddCurrentPageTable","nextPage","addCurrentPage","localStorage","getItem","console","log","setItem","prevPage","filteredPosts","filter","post","Object","keys","some","key","String","toLowerCase","includes","currentFilterPosts","map","item","id","title","body","length","state","dispatch","onAddRedux","type","data"],"sources":["/home/sinkiline/Programming/Test_Project_FrontEnd_React/test-project/src/components/Table/TableData.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport \"./TableData.css\";\nimport {connect} from \"react-redux\";\nimport Pagination from \"../Pagination/Pagination\";\nimport FilterData from \"../FilterData/FilterData\";\n\n\nclass TableData extends Component {\n  render() {\n\n    const postPerPage = 10;\n    const currentPage = this.props.currentPageTable.index;\n    const lastPostIndex = currentPage * postPerPage;\n    const firstPostIndex = lastPostIndex - postPerPage;\n    const currentPosts = this.props.posts.slice(firstPostIndex, lastPostIndex);\n\n    const valueSearch = this.props.Search.value;\n    const allPosts = this.props.posts;\n\n    const paginate = (pageNumbers) => {\n      this.props.onAddCurrentPageTable(pageNumbers);\n    }\n\n    const nextPage = () => {\n      const addCurrentPage = currentPage + 1 > localStorage.getItem(\"countPages\") ? 1 : currentPage + 1;\n      this.props.onAddCurrentPageTable(addCurrentPage);\n      console.log(addCurrentPage);\n      localStorage.setItem(\"currentPage\", addCurrentPage)\n    }\n\n    const prevPage = () => {\n      this.props.onAddCurrentPageTable(currentPage - 1 < 1 ? localStorage.getItem(\"countPages\") : currentPage - 1);\n    }\n\n    const filteredPosts = allPosts.filter(post => Object.keys(post).some(key =>\n      String(post[key]).toLowerCase().includes(valueSearch.toLowerCase())))\n\n    const currentFilterPosts = filteredPosts.slice(firstPostIndex, lastPostIndex);\n\n    return (\n      <>\n        <Table bordered>\n          <thead className={\"tbl-border\"}>\n          <tr className={\"tbl-header\"}>\n            <FilterData/>\n          </tr>\n          </thead>\n          <tbody>\n          {\n            valueSearch !== \"\" ?\n              currentFilterPosts.map((item) => {\n                const {id, title, body} = item;\n                return (\n                  <>\n                    <tr className={\"full-content\"}>\n                      <td className={\"id-format\"}>{id}</td>\n                      <td className={\"title-format\"}>{title}</td>\n                      <td className={\"content-format\"}>{body}</td>\n                    </tr>\n                  </>\n                )\n              })\n              :\n              currentPosts.map((item) => {\n                const {id, title, body} = item;\n                return (\n                  <>\n                    <tr className={\"full-content\"}>\n                      <td className={\"id-format\"}>{id}</td>\n                      <td className={\"title-format\"}>{title}</td>\n                      <td className={\"content-format\"}>{body}</td>\n                    </tr>\n                  </>\n                )\n              })\n            }\n          </tbody>\n        </Table>\n        <Pagination\n          postPerPage={postPerPage}\n          totalPosts={valueSearch === \"\" ? this.props.posts.length : filteredPosts.length}\n          paginate={paginate}\n          prevPage={prevPage}\n          nextPage={nextPage}\n          currentPage={currentPage}\n        />\n      </>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    posts: state.posts,\n    currentPageTable: state.currentPageTable,\n    Search: state.Search\n  }),\n  dispatch => ({\n    onAddRedux: (item) => {\n      dispatch({type: 'ADD_TO_REDUX', data: item})\n    },\n    onAddCurrentPageTable: (item) => {\n      dispatch({type: 'SAVE_CURRENT_PAGE', data: item})\n    }\n  })\n)(TableData);"],"mappings":"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"},"metadata":{},"sourceType":"module"}